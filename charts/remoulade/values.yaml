serviceAccount:
  # specifies whether a service account should be created
  create: true
  # annotations to add to the service account
  annotations: {}
  # the name of the service account to use.
  # if not set and create is true, a name is generated using the fullname template
  name: ""

workers:  # Define remoulade workers to deploy
  enabled: true
  ## Environment variables to inject to all pods
  sharedEnvironmentVariables: []  # [foo: a, bar: b]
  serviceAccount:
    ## Specifies whether a service account should be created
    create: true
    ## Annotations to add to the service account
    annotations: {}
    ## The name of the service account to use.
    ## If not set and create is true, a name is generated using the fullname template
    name: ""
  defaults:
    # XXX proper definition / schema
    image:
      repository: xxx
      tag: xxx
      pullPolicy: IfNotPresent
      pullSecrets: []
    resources:
      limits:
        cpu: "1"
        memory: 1500Mi
      requests:
        cpu: "0.1"
        memory: 128Mi
    labels: {}
    podLabels: {}
    ## Deployment strategy type
    ## Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
    strategyType: RollingUpdate  # Can be Upgrade as well, see https://kubernetes.io/fr/docs/concepts/workloads/controllers/deployment/#strat%C3%A9gie
    terminationGracePeriodSeconds: 30
    podAnnotations:
    affinity:
    priorityClassName:
    nodeSelector: {}
  list: {}  # See examples in ci directory XXX proper documentation / schema

superbowl:
  enabled: false
  replicaCount: 1
  ## The backend to use. It should contain your app.
  ## Usually, will be the same image as your workers
  backend:
    image:
      repository: xxx
      tag: xxx
      pullPolicy: IfNotPresent
    command: []
    args: []
    resources: {}
      ## We usually recommend not to specify default resources and to leave this as a conscious
      ## choice for the user. This also increases chances charts run on environments with little
      ## resources, such as Minikube. If you do want to specify resources, uncomment the following
      ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      ## limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

  frontend:
    image:
      repository: ghcr.io/wiremind/super-bowl
      tag: docker  # XXX
      pullPolicy: IfNotPresent
    resources: {}
    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

  imagePullSecrets: []

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

## PostgreSQL
## Ref: https://github.com/bitnami/charts/tree/master/bitnami/postgresql
remoulade-postgresql:
  enabled: true
  auth:
    postgresPassword: setme
    database: remoulade
    username: remoulade
    password: setme

## Alternatively, give an already existing URL
## Example: externalPostgresqlUrl: postgresql://user:pass@my-postgresql:5432/my-database?sslmode=prefer
externalPostgresqlUrl:

remoulade-rabbitmq:
  enabled: true
  auth:
    username: rabbitmq
    password: setme
    erlangCookie: setme

remoulade-redis:
  enabled: true
  auth:
    password: setme
  architecture: standalone
